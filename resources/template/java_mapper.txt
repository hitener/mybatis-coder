package $javaInterfacePackage$;

import org.apache.ibatis.annotations.Param;
import $javaModelPackage$.$DomainObjectName$;
import java.util.List;

public interface I$DomainObjectName$DAO {

    $DomainObjectName$ getById($ScriptEngine
	for(var i = 0; i < primaryKeys.size(); i++){
	    var key = primaryKeys.get(i);
   	    if(i > 0){
		builder.append(', ');
	    }
            builder.append('@Param("'+key.getPropertyName()+'") ');
	    builder.append(key.getPropertyType()+' '+key.getPropertyName());
        }
$);

    void  deleteById($ScriptEngine
	for(var i = 0; i < primaryKeys.size(); i++){
	    var key = primaryKeys.get(i);
   	    if(i > 0){
		builder.append(', ');
	    }
            builder.append('@Param("'+key.getPropertyName()+'") ');
	    builder.append(key.getPropertyType()+' '+key.getPropertyName());
        }
$);

    void  update($DomainObjectName$ obj);

    void  save($DomainObjectName$ obj);

    List<$DomainObjectName$> list($DomainObjectName$ obj);

    // #marking start (write your code under this, don't change marke line)
$retainedCode$
    // #marking end (when plugin overwrite this file, your code will be remained)

}